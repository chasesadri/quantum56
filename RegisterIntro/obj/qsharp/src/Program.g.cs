//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"RegisterIntro\",\"Name\":\"Draw\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":6,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Chase\\\\Documents\\\\quantum56\\\\RegisterIntro\\\\Program.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"RegisterIntro\",\"Name\":\"Draw\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Chase\\\\Documents\\\\quantum56\\\\RegisterIntro\\\\Program.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"RegisterIntro\",\"Name\":\"RegisterHadamard\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Chase\\\\Documents\\\\quantum56\\\\RegisterIntro\\\\Program.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"n\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":29}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"RegisterIntro\",\"Name\":\"RegisterHadamard\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Chase\\\\Documents\\\\quantum56\\\\RegisterIntro\\\\Program.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":27}},\"Documentation\":[]}")]
#line hidden
namespace RegisterIntro
{
    [SourceLocation("C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs", OperationFunctor.Body, 8, 41)]
    public partial class Draw : Operation<QVoid, IQArray<Result>>, ICallable
    {
        public Draw(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Draw";
        String ICallable.FullName => "RegisterIntro.Draw";
        public static EntryPointInfo<QVoid, IQArray<Result>> Info => new EntryPointInfo<QVoid, IQArray<Result>>(typeof(Draw));
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<Int64, IQArray<Result>> RegisterHadamard__
        {
            get;
            set;
        }

        protected ICallable<Result, Boolean> Microsoft__Quantum__Canon__IsResultOne
        {
            get;
            set;
        }

        public override Func<QVoid, IQArray<Result>> __Body__ => (__in__) =>
        {
#line 9 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            Message__.Apply("Hello quantum world!");
#line 11 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            var register_size = 2L;
#line 12 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            var repetitions = 5L;
#line 14 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            var results = QArray<Result>.Create((register_size * repetitions));
#line 16 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            foreach (var i in new QRange(0L, (repetitions - 1L)))
#line hidden
            {
#line 17 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                var p = (IQArray<Result>)RegisterHadamard__.Apply(register_size);
#line 18 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                foreach (var j in new QRange(0L, (register_size - 1L)))
#line hidden
                {
#line 19 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                    results.Modify(((i * register_size) + j), p[j]);
                }
            }

#line 23 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            var output = "";
#line 28 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            foreach (var i in new QRange(0L, ((register_size * repetitions) - 1L)))
#line hidden
            {
#line 29 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                if (Microsoft__Quantum__Canon__IsResultOne.Apply(results[i]))
                {
#line 30 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                    output = (output + "1");
                }
                else
                {
#line 32 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                    output = (output + "0");
                }
            }

#line 36 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            Message__.Apply(output);
#line 38 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            return results;
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.RegisterHadamard__ = this.__Factory__.Get<ICallable<Int64, IQArray<Result>>>(typeof(RegisterHadamard));
            this.Microsoft__Quantum__Canon__IsResultOne = this.__Factory__.Get<ICallable<Result, Boolean>>(typeof(global::Microsoft.Quantum.Canon.IsResultOne));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(IQArray<Result> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Result>> Run(IOperationFactory __m__)
        {
            return __m__.Run<Draw, QVoid, IQArray<Result>>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs", OperationFunctor.Body, 41, -1)]
    public partial class RegisterHadamard : Operation<Int64, IQArray<Result>>, ICallable
    {
        public RegisterHadamard(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "RegisterHadamard";
        String ICallable.FullName => "RegisterIntro.RegisterHadamard";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        public override Func<Int64, IQArray<Result>> __Body__ => (__in__) =>
        {
            var n = __in__;
#line 42 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
            var register = QArray<Result>.Create(n);
#line hidden
            {
#line 44 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                var qs = Allocate__.Apply(n);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 46 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__H, qs));
#line 48 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                    foreach (var index in new QRange(0L, (qs.Length - 1L)))
#line hidden
                    {
#line 50 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                        register.Modify(index, Microsoft__Quantum__Intrinsic__M.Apply(qs[index]));
                    }

#line 54 "C:\\Users\\Chase\\Documents\\quantum56\\RegisterIntro\\Program.qs"
                    return register;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(qs);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
        }

        public override IApplyData __DataIn__(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __DataOut__(IQArray<Result> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Result>> Run(IOperationFactory __m__, Int64 n)
        {
            return __m__.Run<RegisterHadamard, Int64, IQArray<Result>>(n);
        }
    }
}