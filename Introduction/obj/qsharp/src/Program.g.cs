//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QuantumArt\",\"Name\":\"SayHello\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":5,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Chase\\\\Documents\\\\quantum56\\\\QuantumArt\\\\Program.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QuantumArt\",\"Name\":\"SayHello\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Chase\\\\Documents\\\\quantum56\\\\QuantumArt\\\\Program.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QuantumArt\",\"Name\":\"Paint\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Chase\\\\Documents\\\\quantum56\\\\QuantumArt\\\\Program.qs\",\"Position\":{\"Item1\":35,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"n\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":17},\"Item2\":{\"Line\":1,\"Column\":18}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Int\"},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QuantumArt\",\"Name\":\"Paint\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Chase\\\\Documents\\\\quantum56\\\\QuantumArt\\\\Program.qs\",\"Position\":{\"Item1\":35,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":16}},\"Documentation\":[]}")]
#line hidden
namespace QuantumArt
{
    [SourceLocation("C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs", OperationFunctor.Body, 7, 36)]
    public partial class SayHello : Operation<QVoid, IQArray<Result>>, ICallable
    {
        public SayHello(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "SayHello";
        String ICallable.FullName => "QuantumArt.SayHello";
        public static EntryPointInfo<QVoid, IQArray<Result>> Info => new EntryPointInfo<QVoid, IQArray<Result>>(typeof(SayHello));
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<Int64, IQArray<Result>> Paint__
        {
            get;
            set;
        }

        protected ICallable<Result, Boolean> Microsoft__Quantum__Canon__IsResultOne
        {
            get;
            set;
        }

        public override Func<QVoid, IQArray<Result>> __Body__ => (__in__) =>
        {
#line 8 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            Message__.Apply("Hello quantum world!");
#line 10 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            var size = 1000L;
#line 12 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            var r = QArray<Result>.Create(size);
#line 14 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            foreach (var i in new QRange(0L, ((size / 10L) - 1L)))
#line hidden
            {
#line 15 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                var p = (IQArray<Result>)Paint__.Apply(10L);
#line 16 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                foreach (var j in new QRange(0L, (10L - 1L)))
#line hidden
                {
#line 17 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                    r.Modify(((i * 10L) + j), p[j]);
                }
            }

#line 21 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            var output = "";
#line 23 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            foreach (var i in new QRange(0L, (size - 1L)))
#line hidden
            {
#line 24 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                if (Microsoft__Quantum__Canon__IsResultOne.Apply(r[i]))
                {
#line 25 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                    output = (output + "1");
                }
                else
                {
#line 27 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                    output = (output + "0");
                }
            }

#line 31 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            Message__.Apply(output);
#line 33 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            return r;
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.Paint__ = this.__Factory__.Get<ICallable<Int64, IQArray<Result>>>(typeof(Paint));
            this.Microsoft__Quantum__Canon__IsResultOne = this.__Factory__.Get<ICallable<Result, Boolean>>(typeof(global::Microsoft.Quantum.Canon.IsResultOne));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(IQArray<Result> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Result>> Run(IOperationFactory __m__)
        {
            return __m__.Run<SayHello, QVoid, IQArray<Result>>(QVoid.Instance);
        }
    }

    [SourceLocation("C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs", OperationFunctor.Body, 36, -1)]
    public partial class Paint : Operation<Int64, IQArray<Result>>, ICallable
    {
        public Paint(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Paint";
        String ICallable.FullName => "QuantumArt.Paint";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Canon__ApplyToEach
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        public override Func<Int64, IQArray<Result>> __Body__ => (__in__) =>
        {
            var n = __in__;
#line 37 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
            var r = QArray<Result>.Create(n);
#line hidden
            {
#line 39 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                var qs = Allocate__.Apply(n);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 41 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                    Microsoft__Quantum__Canon__ApplyToEach.Apply((Microsoft__Quantum__Intrinsic__H, qs));
#line 43 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                    foreach (var index in new QRange(0L, (qs.Length - 1L)))
#line hidden
                    {
#line 45 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                        r.Modify(index, Microsoft__Quantum__Intrinsic__M.Apply(qs[index]));
                    }

#line 49 "C:\\Users\\Chase\\Documents\\quantum56\\QuantumArt\\Program.qs"
                    return r;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(qs);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Canon__ApplyToEach = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Canon.ApplyToEach<>));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
        }

        public override IApplyData __DataIn__(Int64 data) => new QTuple<Int64>(data);
        public override IApplyData __DataOut__(IQArray<Result> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Result>> Run(IOperationFactory __m__, Int64 n)
        {
            return __m__.Run<Paint, Int64, IQArray<Result>>(n);
        }
    }
}